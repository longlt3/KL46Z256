/*
 *  TOPPERS/JSP Kernel
 *      Toyohashi Open Platform for Embedded Real-Time Systems/
 *      Just Standard Profile Kernel
 * 
 *  Copyright (C) 2000-2004 by Embedded and Real-Time Systems Laboratory
 *                              Toyohashi Univ. of Technology, JAPAN
 * 
 *  ä¸Šè¨˜è‘—ä½œæ¨©è€…ã�¯ï¼Œä»¥ä¸‹ã�® (1)ï½ž(4) ã�®æ�¡ä»¶ã�‹ï¼ŒFree Software Foundation 
 *  ã�«ã‚ˆã�£ã�¦å…¬è¡¨ã�•ã‚Œã�¦ã�„ã‚‹ GNU General Public License ã�® Version 2 ã�«è¨˜
 *  è¿°ã�•ã‚Œã�¦ã�„ã‚‹æ�¡ä»¶ã‚’æº€ã�Ÿã�™å ´å�ˆã�«é™�ã‚Šï¼Œæœ¬ã‚½ãƒ•ãƒˆã‚¦ã‚§ã‚¢ï¼ˆæœ¬ã‚½ãƒ•ãƒˆã‚¦ã‚§ã‚¢
 *  ã‚’æ”¹å¤‰ã�—ã�Ÿã‚‚ã�®ã‚’å�«ã‚€ï¼Žä»¥ä¸‹å�Œã�˜ï¼‰ã‚’ä½¿ç”¨ãƒ»è¤‡è£½ãƒ»æ”¹å¤‰ãƒ»å†�é…�å¸ƒï¼ˆä»¥ä¸‹ï¼Œ
 *  åˆ©ç”¨ã�¨å‘¼ã�¶ï¼‰ã�™ã‚‹ã�“ã�¨ã‚’ç„¡å„Ÿã�§è¨±è«¾ã�™ã‚‹ï¼Ž
 *  (1) æœ¬ã‚½ãƒ•ãƒˆã‚¦ã‚§ã‚¢ã‚’ã‚½ãƒ¼ã‚¹ã‚³ãƒ¼ãƒ‰ã�®å½¢ã�§åˆ©ç”¨ã�™ã‚‹å ´å�ˆã�«ã�¯ï¼Œä¸Šè¨˜ã�®è‘—ä½œ
 *      æ¨©è¡¨ç¤ºï¼Œã�“ã�®åˆ©ç”¨æ�¡ä»¶ã�Šã‚ˆã�³ä¸‹è¨˜ã�®ç„¡ä¿�è¨¼è¦�å®šã�Œï¼Œã��ã�®ã�¾ã�¾ã�®å½¢ã�§ã‚½ãƒ¼
 *      ã‚¹ã‚³ãƒ¼ãƒ‰ä¸­ã�«å�«ã�¾ã‚Œã�¦ã�„ã‚‹ã�“ã�¨ï¼Ž
 *  (2) æœ¬ã‚½ãƒ•ãƒˆã‚¦ã‚§ã‚¢ã‚’ï¼Œãƒ©ã‚¤ãƒ–ãƒ©ãƒªå½¢å¼�ã�ªã�©ï¼Œä»–ã�®ã‚½ãƒ•ãƒˆã‚¦ã‚§ã‚¢é–‹ç™ºã�«ä½¿
 *      ç”¨ã�§ã��ã‚‹å½¢ã�§å†�é…�å¸ƒã�™ã‚‹å ´å�ˆã�«ã�¯ï¼Œå†�é…�å¸ƒã�«ä¼´ã�†ãƒ‰ã‚­ãƒ¥ãƒ¡ãƒ³ãƒˆï¼ˆåˆ©ç”¨
 *      è€…ãƒžãƒ‹ãƒ¥ã‚¢ãƒ«ã�ªã�©ï¼‰ã�«ï¼Œä¸Šè¨˜ã�®è‘—ä½œæ¨©è¡¨ç¤ºï¼Œã�“ã�®åˆ©ç”¨æ�¡ä»¶ã�Šã‚ˆã�³ä¸‹è¨˜
 *      ã�®ç„¡ä¿�è¨¼è¦�å®šã‚’æŽ²è¼‰ã�™ã‚‹ã�“ã�¨ï¼Ž
 *  (3) æœ¬ã‚½ãƒ•ãƒˆã‚¦ã‚§ã‚¢ã‚’ï¼Œæ©Ÿå™¨ã�«çµ„ã�¿è¾¼ã‚€ã�ªã�©ï¼Œä»–ã�®ã‚½ãƒ•ãƒˆã‚¦ã‚§ã‚¢é–‹ç™ºã�«ä½¿
 *      ç”¨ã�§ã��ã�ªã�„å½¢ã�§å†�é…�å¸ƒã�™ã‚‹å ´å�ˆã�«ã�¯ï¼Œæ¬¡ã�®ã�„ã�šã‚Œã�‹ã�®æ�¡ä»¶ã‚’æº€ã�Ÿã�™ã�“
 *      ã�¨ï¼Ž
 *    (a) å†�é…�å¸ƒã�«ä¼´ã�†ãƒ‰ã‚­ãƒ¥ãƒ¡ãƒ³ãƒˆï¼ˆåˆ©ç”¨è€…ãƒžãƒ‹ãƒ¥ã‚¢ãƒ«ã�ªã�©ï¼‰ã�«ï¼Œä¸Šè¨˜ã�®è‘—
 *        ä½œæ¨©è¡¨ç¤ºï¼Œã�“ã�®åˆ©ç”¨æ�¡ä»¶ã�Šã‚ˆã�³ä¸‹è¨˜ã�®ç„¡ä¿�è¨¼è¦�å®šã‚’æŽ²è¼‰ã�™ã‚‹ã�“ã�¨ï¼Ž
 *    (b) å†�é…�å¸ƒã�®å½¢æ…‹ã‚’ï¼Œåˆ¥ã�«å®šã‚�ã‚‹æ–¹æ³•ã�«ã‚ˆã�£ã�¦ï¼ŒTOPPERSãƒ—ãƒ­ã‚¸ã‚§ã‚¯ãƒˆã�«
 *        å ±å‘Šã�™ã‚‹ã�“ã�¨ï¼Ž
 *  (4) æœ¬ã‚½ãƒ•ãƒˆã‚¦ã‚§ã‚¢ã�®åˆ©ç”¨ã�«ã‚ˆã‚Šç›´æŽ¥çš„ã�¾ã�Ÿã�¯é–“æŽ¥çš„ã�«ç”Ÿã�˜ã‚‹ã�„ã�‹ã�ªã‚‹æ��
 *      å®³ã�‹ã‚‰ã‚‚ï¼Œä¸Šè¨˜è‘—ä½œæ¨©è€…ã�Šã‚ˆã�³TOPPERSãƒ—ãƒ­ã‚¸ã‚§ã‚¯ãƒˆã‚’å…�è²¬ã�™ã‚‹ã�“ã�¨ï¼Ž
 * 
 *  æœ¬ã‚½ãƒ•ãƒˆã‚¦ã‚§ã‚¢ã�¯ï¼Œç„¡ä¿�è¨¼ã�§æ��ä¾›ã�•ã‚Œã�¦ã�„ã‚‹ã‚‚ã�®ã�§ã�‚ã‚‹ï¼Žä¸Šè¨˜è‘—ä½œæ¨©è€…ã�Š
 *  ã‚ˆã�³TOPPERSãƒ—ãƒ­ã‚¸ã‚§ã‚¯ãƒˆã�¯ï¼Œæœ¬ã‚½ãƒ•ãƒˆã‚¦ã‚§ã‚¢ã�«é–¢ã�—ã�¦ï¼Œã��ã�®é�©ç”¨å�¯èƒ½æ€§ã‚‚
 *  å�«ã‚�ã�¦ï¼Œã�„ã�‹ã�ªã‚‹ä¿�è¨¼ã‚‚è¡Œã‚�ã�ªã�„ï¼Žã�¾ã�Ÿï¼Œæœ¬ã‚½ãƒ•ãƒˆã‚¦ã‚§ã‚¢ã�®åˆ©ç”¨ã�«ã‚ˆã‚Šç›´
 *  æŽ¥çš„ã�¾ã�Ÿã�¯é–“æŽ¥çš„ã�«ç”Ÿã�˜ã�Ÿã�„ã�‹ã�ªã‚‹æ��å®³ã�«é–¢ã�—ã�¦ã‚‚ï¼Œã��ã�®è²¬ä»»ã‚’è² ã‚�ã�ªã�„ï¼Ž
 * 
 *  @(#) $Id: cpu_support.S,v 1.27 2007/01/05 01:02:31 honda Exp $
 */

/*
 *    ãƒ—ãƒ­ã‚»ãƒƒã‚µä¾�å­˜ãƒ¢ã‚¸ãƒ¥ãƒ¼ãƒ« ã‚¢ã‚»ãƒ³ãƒ–ãƒªè¨€èªžéƒ¨ï¼ˆARMv4ç”¨ï¼‰
 */
#define _MACRO_ONLY
#include <kernel/jsp_kernel.h>
#include <armv6/offset.h>
#include <include/t_config.h>

/*
 *  ã‚¿ã‚¹ã‚¯ãƒ‡ã‚£ã‚¹ãƒ‘ãƒƒãƒ�ãƒ£
 *
 *  dispatch ã�¯ï¼Œã‚¹ãƒ¼ãƒ‘ãƒ¼ãƒ�ã‚¤ã‚¶ãƒ¼ãƒ¢ãƒ¼ãƒ‰ãƒ»å‰²è¾¼ã�¿ç¦�æ­¢çŠ¶æ…‹ã�§å‘¼ã�³å‡ºã�•ã�ªã�‘ã‚Œã�°
 *  ã�ªã‚‰ã�ªã�„ï¼Ž
 *  _exit_and_dispatch ã‚‚ï¼Œã‚¹ãƒ¼ãƒ‘ãƒ¼ãƒ�ã‚¤ã‚¶ãƒ¼ãƒ¢ãƒ¼ãƒ‰ãƒ»å‰²è¾¼ã�¿ç¦�æ­¢çŠ¶æ…‹ã�§å‘¼ã�³å‡ºã�™
 *  ã�®ã�ŒåŽŸå‰‡ã�§ã�‚ã‚‹ã�Œï¼Œã‚«ãƒ¼ãƒ�ãƒ«èµ·å‹•æ™‚ã�«å¯¾å¿œã�™ã‚‹ã�Ÿã‚�ï¼ŒIRQãƒ¢ãƒ¼ãƒ‰ã�§å‘¼ã�³å‡ºã�—ã�Ÿ
 *  å ´å�ˆã�«ã‚‚å¯¾å¿œã�—ã�¦ã�„ã‚‹ï¼Ž
 */

        .text
        .align 4    
        .globl dispatch
        .globl exit_and_dispatch
        .extern call_texrtn
dispatch:
		push {r4-r7,lr}
        ldr   r0, =runtsk          /* runtskã‚’èª­ã�¿è¾¼ã‚€ */
        ldr   r1, [r0]
		mov   r2, sp
		str	  r2,  [r1, #TCB_sp]
        adr   r2, dispatch_r
        //ldr   r2, =dispatch_r
        str   r2, [r1,#TCB_pc]      /* å®Ÿè¡Œå†�é–‹ç•ªåœ°ã‚’ä¿�å­˜ */
        b     dispatcher_1

.align
dispatch_r:
		pop   {r4-r7}
		pop   {r3}
		mov   lr, r3
		
        /*
         * ã‚¿ã‚¹ã‚¯ä¾‹å¤–å‡¦ç�†ãƒ«ãƒ¼ãƒ�ãƒ³ã�®èµ·å‹•
         * dispatch_r ã�¯ dispatcher_1 ã�‹ã‚‰å‘¼ã�³å‡ºã�•ã‚Œã‚‹ã�Ÿã‚�ï¼Œ
         * tcbã�®ã‚¢ãƒ‰ãƒ¬ã‚¹ã�¯r1ã�«å…¥ã�£ã�¦ã�„ã‚‹
         */
        ldrb  r0, [r1,#TCB_enatex]
        mov r4, #1
        lsl   r4, #TCB_eantex_SHIFT
        tst   r0, r4
        
        beq   dispatch_r_1          /* enatex ã�Œ FALSE ã�ªã‚‰ãƒªã‚¿ãƒ¼ãƒ³ */
        ldr   r0,[r1,#TCB_texptn]   /* texptnã‚’ãƒ­ãƒ¼ãƒ‰               */
        tst   r0,r0                 /* texptn ã�Œ0ã�§ç„¡ã�‘ã‚Œã�°         */
        bne   jump_to_call_texrtn
        b     dispatch_r_1
jump_to_call_texrtn:
 		ldr   r4, =call_texrtn
		bx    r4		/* ã‚¿ã‚¹ã‚¯ä¾‹å¤–ãƒ«ãƒ¼ãƒ�ãƒ³ã�®å‘¼ã�³å‡ºã�— */
dispatch_r_1:
        mov   pc,lr



exit_and_dispatch:
dispatcher_1:
        /*
         *  ã�“ã�“ã�§ã�¯ã‚¹ãƒ¼ãƒ‘ãƒ¼ãƒ�ã‚¤ã‚¶ãƒ¼ãƒ¢ãƒ¼ãƒ‰ãƒ»å‰²è¾¼ã�¿ç¦�æ­¢çŠ¶æ…‹ã�§ã�ªã�‘ã‚Œã�°ã�ªã‚‰ã�ªã�„ï¼Ž
         */
        ldr   r0, =schedtsk   /* schedtsk ã‚’èª­ã�¿è¾¼ã‚€ */
        ldr   r1, [r0]
        ldr   r2, =runtsk     /* schedtsk ã‚’ runtskã�« */
        str   r1, [r2]        /* schedtsk ã�Œã�„ã�ªã�„å ´å�ˆã�¯runtskã‚’NULLã�« */
        cmp   r1, #0
        beq   dispatcher_2
dispatcher_3:					/* run task */
        ldr    r4,[r1,#TCB_sp]
        mov    sp, r4
        ldr    r4,[r1,#TCB_pc]
        mov    pc, r4
        
dispatcher_2:
        ldr   r4, =STACKTOP
        mov   sp, r4
        WAIT_INTERRUPT
        b     dispatcher_1


/*
 *  ã‚¿ã‚¹ã‚¯èµ·å‹•æ™‚å‡¦ç�†
 */
        .text
        .globl activate_r
activate_r:
        ldr   r4, =ext_tsk
        mov   lr, r4
        pop    {r0,pc}
        
/*
 *  å‰²è¾¼ã�¿ãƒ�ãƒ³ãƒ‰ãƒ©ï¼�CPUä¾‹å¤–ãƒ�ãƒ³ãƒ‰ãƒ©å‡ºå�£å‡¦ç�†
 *
 *  ret_int ã�¯ã‚¹ãƒ¼ãƒ‘ãƒ¼ãƒ�ã‚¤ã‚¶ãƒ¼ãƒ¢ãƒ¼ãƒ‰ãƒ»IRQå‰²è¾¼ã�¿ç¦�æ­¢çŠ¶æ…‹ã�§å‘¼ã�³å‡ºã�™ï¼Ž
 */
        .text
        .globl ret_int
        .globl ret_exc
ret_int:
ret_exc:

	.globl sil_dly_nse
sil_dly_nse:
        sub   r0, r0, #SIL_DLY_TIM1
        cmp   r0, #0
        bgt   _sil_dly_nse1
        ble mov_pc_lr
        b   _sil_dly_nse1
mov_pc_lr:
	mov pc, lr
_sil_dly_nse1:
        sub   r0, r0, #SIL_DLY_TIM2
        cmp   r0, #0
        bgt   _sil_dly_nse1
        ble mov_pc_lr
